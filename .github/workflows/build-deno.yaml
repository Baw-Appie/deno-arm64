name: build-deno

# https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows
on:
  release:
    types: [created]

# jobs:
#   release_metadata:
#     runs-on: ubuntu-latest
#     outputs:
#       upload_url: ${{ steps.step1.outputs.test }}
#     steps:
#     - id: step1
#       run: echo "::set-output name=test::hello"
#     - id: step2
#       run: echo "::set-output name=test::world"
#   compile:
#     runs-on: ubuntu-latest
#     needs: job1
#     steps:
#     - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}

# https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobs
jobs:
  release_metadata:
    name: Get Release Upload URL
    # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
    steps:
      - id: get_upload_url
        run: |
          response=$(curl -s -H "Accept: application/json" https://api.github.com/repos/lukechannings/docker-deno/releases)
          url=$(echo $response | jq -r ".[]|select(.tag_name==\"${GITHUB_REF#refs/tags/}\").upload_url")
          echo "::set-output name=test::hello"
          echo "::set-output name=upload_url::${url}"
  compile:
    runs-on: ubuntu-latest
    needs: release_metadata
    name: "Compile ${{ matrix.target }}"
    strategy:
      matrix:
        target:
          - linux/arm
          - linux/arm64
          - linux/amd64
    steps:
      - name: Install QEMU
        uses: docker/setup-qemu-action@v 
      - run: |
          docker run --rm -it --platform=${{ matrix.target }} ubuntu uname -a
          echo ${{ needs.release_metadata.outputs.upload_url }}

